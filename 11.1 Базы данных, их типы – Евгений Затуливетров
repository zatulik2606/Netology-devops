"11.1 Базы данных, их типы – Евгений Затуливетров"

Задание 1. СУБД

Кейс

Крупная строительная компания, которая так же занимается проектированием и девелопментом, решила создать правильную архитектуру для работы с данными. Ниже представлены задачи, которые необходимо решить для каждой предметной области.

Какие типы СУБД, на Ваш взгляд, лучше всего подойдут для решения этих задач и почему?

1.1 Бюджетирование проектов с дальнейшим формированием финансовых аналитических отчетов и прогнозирования рисков (СУБД должна гарантировать целостность и четкую структуру данных).

Можно рассмотреть варианты SQL( Postgre, Dbeaver и т.д.)

1.2 Под каждый девелоперский проект создается отдельный лендинг и все данные по лидам стекаются в CRM к маркетологам и менеджерам по продажам. Какой тип СУБД лучше использовать для лендингов и для CRM? (СУБД должны быть гибкими и быстрыми).

NoSQL( к примеру, MongoDB)

1.3 Отдел контроля качества решил создать базу по корпоративным нормам и правилам, обучающему материалу и так далее, сформированную согласно структуре компании (СУБД должна иметь простую и понятную структуру).

В этой ситуации необходимо использовать иерархическую структуру СУБД.

1.4 Департамент логистики нуждается в решении задач по быстрому формированию маршрутов доставки материалов по объектам и распределению курьеров по маршрутам с доставкой документов (СУБД должна уметь быстро работать со связями).

Для формирования маршрутов и быстрого распределения маршрутов, я предложил бы использовать графовую СУБД.

Задание 2. Транзакции.

2.1 Пользователь пополняет баланс счета телефона, распишите пошагово какие действия должны произойти для того, чтобы транзакция завершилась успешно (ориентируйтесь на 6 действий).

1. Проверяем баланс на карте с которой будем производить оплату

2. Вносим деньги с карты на депозит

3. Проверяем количество оставшихся денег на карте

4. Проверяем счет на телефоне

5. Деньги с депозита вносим на баланс

6. Проверяем баланс телефона

Задание 3. SQL vs NoSQL

3.1 Напишите 5 преимуществ SQL систем по отношению к NoSQL.

Преимущества SQL:

1. Высокая надежность

2. Совместимость с большим количеством ОС( win, linux ) и языками (Java, C++, Ruby, Python)

3. Открытый исходный код

4. Репликации (БД можно использовать между разными узлами )

5. Возможность получения к отдельным фрагментам БД, при этом пользователь не знает всей структуры таблиц.

Задание 4. Кластеры

Необходимо производить большое количество вычислений при работе с огромным количеством данных, под эту задачу выделено 1000 машин.

На основе какого критерия будете выбирать тип СУБД и какая модель распределенных вычислений здесь справится лучше всего и почему?

В случае такого количества узлов требуется использовать MapReduce.

Если говорить о частном случае, то рекомендую использовать Hadoop. Он обеспечит работу с большим количеством данных.
